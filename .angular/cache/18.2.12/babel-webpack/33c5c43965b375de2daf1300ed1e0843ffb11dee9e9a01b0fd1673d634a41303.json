{"ast":null,"code":"import { EventEmitter, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/unique-id/unique-id.service\";\nimport * as i2 from \"../../directives/keyboard-manager/keyboard-manager.directives\";\nimport * as i3 from \"../../directives/keyboard-manager/keyboard-managed-item.directive\";\nexport let YesNoButtonGroupComponent = /*#__PURE__*/(() => {\n  class YesNoButtonGroupComponent {\n    constructor(uniqueIdService) {\n      this.value = null;\n      this.label = '';\n      this.valueChange = new EventEmitter();\n      this.id = null;\n      this.options = YesNoButtonGroupOptions;\n      this.onChange = value => {};\n      this.onTouched = () => {};\n      this.id = uniqueIdService.generateUniqueIdWithPrefix('yes-no-button-group');\n    }\n    ngOnInit() {}\n    writeValue(value) {\n      this.value = value;\n      this.onChange(this.value);\n      this.valueChange.emit(this.value);\n    }\n    registerOnChange(fn) {\n      this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n    setDisabledState(isDisabled) {\n      throw new Error('Method not implemented.');\n    }\n    activate(value) {\n      this.writeValue(value);\n    }\n    onKeyDown(event) {\n      // Detecta as teclas de seta e navega para a opção correspondente\n      if (event.key === 'ArrowLeft' || event.key === 'ArrowUp') {\n        this.navigateToOption(this.options.YES);\n        event.preventDefault(); // Impede o comportamento padrão\n      } else if (event.key === 'ArrowRight' || event.key === 'ArrowDown') {\n        this.navigateToOption(this.options.NO);\n        event.preventDefault(); // Impede o comportamento padrão\n      }\n    }\n    navigateToOption(option) {\n      // Ativa a opção desejada\n      this.activate(option);\n    }\n    static {\n      this.ɵfac = function YesNoButtonGroupComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || YesNoButtonGroupComponent)(i0.ɵɵdirectiveInject(i1.UniqueIdService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: YesNoButtonGroupComponent,\n        selectors: [[\"app-yes-no-button-group\"]],\n        inputs: {\n          value: \"value\",\n          label: \"label\"\n        },\n        outputs: {\n          valueChange: \"valueChange\"\n        },\n        features: [i0.ɵɵProvidersFeature([{\n          provide: NG_VALUE_ACCESSOR,\n          multi: true,\n          useExisting: forwardRef(() => YesNoButtonGroupComponent)\n        }])],\n        decls: 7,\n        vars: 11,\n        consts: [[\"appKm\", \"\", \"role\", \"radiogroup\", 1, \"button-group\", 3, \"keydown\"], [1, \"label\"], [\"appKmItem\", \"\", \"role\", \"radio\", \"type\", \"button\", 1, \"button\", \"button-yes\", 3, \"focused\", \"click\"], [\"appKmItem\", \"\", \"role\", \"radio\", \"type\", \"button\", 1, \"button\", \"button-no\", 3, \"focused\", \"click\"]],\n        template: function YesNoButtonGroupComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0);\n            i0.ɵɵlistener(\"keydown\", function YesNoButtonGroupComponent_Template_div_keydown_0_listener($event) {\n              return ctx.onKeyDown($event);\n            });\n            i0.ɵɵelementStart(1, \"label\", 1);\n            i0.ɵɵtext(2);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"button\", 2);\n            i0.ɵɵlistener(\"focused\", function YesNoButtonGroupComponent_Template_button_focused_3_listener() {\n              return ctx.activate(ctx.options.YES);\n            })(\"click\", function YesNoButtonGroupComponent_Template_button_click_3_listener() {\n              return ctx.activate(ctx.options.YES);\n            });\n            i0.ɵɵtext(4, \" Yes \");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(5, \"button\", 3);\n            i0.ɵɵlistener(\"focused\", function YesNoButtonGroupComponent_Template_button_focused_5_listener() {\n              return ctx.activate(ctx.options.NO);\n            })(\"click\", function YesNoButtonGroupComponent_Template_button_click_5_listener() {\n              return ctx.activate(ctx.options.NO);\n            });\n            i0.ɵɵtext(6, \" No \");\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵattribute(\"aria-labelledby\", ctx.id);\n            i0.ɵɵadvance();\n            i0.ɵɵattribute(\"id\", ctx.id);\n            i0.ɵɵadvance();\n            i0.ɵɵtextInterpolate(ctx.label);\n            i0.ɵɵadvance();\n            i0.ɵɵclassProp(\"button-pressed\", ctx.value === ctx.options.YES);\n            i0.ɵɵattribute(\"aria-checked\", ctx.value === ctx.options.YES)(\"tabindex\", ctx.value === ctx.options.YES || ctx.value === null ? 0 : -1);\n            i0.ɵɵadvance(2);\n            i0.ɵɵclassProp(\"button-pressed\", ctx.value === ctx.options.NO);\n            i0.ɵɵattribute(\"aria-checked\", ctx.value === ctx.options.NO)(\"tabindex\", ctx.value === ctx.options.NO ? 0 : -1);\n          }\n        },\n        dependencies: [i2.KeybordManagerDirective, i3.KeyboardManagedItemDirective],\n        styles: [\".button-group[_ngcontent-%COMP%]   .label[_ngcontent-%COMP%]{margin-right:.5rem}.button-group[_ngcontent-%COMP%]   .button[_ngcontent-%COMP%]{border:1px solid #aeb6c6;padding:.5rem .75rem;margin:0;color:back;background-color:#fff}.button-group[_ngcontent-%COMP%]   .button.button-yes[_ngcontent-%COMP%]{border-radius:5px 0 0 5px}.button-group[_ngcontent-%COMP%]   .button.button-no[_ngcontent-%COMP%]{border-radius:0 5px 5px 0}.button-group[_ngcontent-%COMP%]   .button.button-pressed[_ngcontent-%COMP%]{background-color:#0fc7ff;border-color:#0fc7ff;box-shadow:inset 0 0 5px #0003}\"]\n      });\n    }\n  }\n  return YesNoButtonGroupComponent;\n})();\nvar YesNoButtonGroupOptions = /*#__PURE__*/function (YesNoButtonGroupOptions) {\n  YesNoButtonGroupOptions[\"YES\"] = \"yes\";\n  YesNoButtonGroupOptions[\"NO\"] = \"no\";\n  return YesNoButtonGroupOptions;\n}(YesNoButtonGroupOptions || {});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}