{"ast":null,"code":"import { KeyboardManagedItemDirective } from \"./keyboard-managed-item.directive\";\nimport * as i0 from \"@angular/core\";\nexport let KeybordManagerDirective = /*#__PURE__*/(() => {\n  class KeybordManagerDirective {\n    constructor() {\n      this.items = null;\n    }\n    manageKeys(event) {\n      switch (event.key) {\n        case 'ArrowUp':\n          console.log('up');\n          this.moveFocus(ArrowDirection.RIGHT).focus();\n          break;\n        case 'ArrowDown':\n          this.moveFocus(ArrowDirection.LEFT).focus();\n          break;\n        case 'ArrowLeft':\n          this.moveFocus(ArrowDirection.LEFT).focus();\n          break;\n        case 'ArrowRight':\n          this.moveFocus(ArrowDirection.RIGHT).focus();\n          ;\n          break;\n      }\n    }\n    moveFocus(direction) {\n      const items = this.items.toArray();\n      const currentSelectedIndex = items.findIndex(item => item.isFocused());\n      const targetElementFocus = items[currentSelectedIndex + direction];\n      if (targetElementFocus) {\n        return targetElementFocus;\n      }\n      return direction === ArrowDirection.LEFT ? items[items.length - 1] : items[0];\n    }\n    static {\n      this.ɵfac = function KeybordManagerDirective_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || KeybordManagerDirective)();\n      };\n    }\n    static {\n      this.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n        type: KeybordManagerDirective,\n        selectors: [[\"\", \"appKm\", \"\"]],\n        contentQueries: function KeybordManagerDirective_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, KeyboardManagedItemDirective, 4);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.items = _t);\n          }\n        },\n        hostBindings: function KeybordManagerDirective_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"Keyup\", function KeybordManagerDirective_Keyup_HostBindingHandler($event) {\n              return ctx.manageKeys($event);\n            });\n          }\n        }\n      });\n    }\n  }\n  return KeybordManagerDirective;\n})();\nvar ArrowDirection = /*#__PURE__*/function (ArrowDirection) {\n  ArrowDirection[ArrowDirection[\"LEFT\"] = -1] = \"LEFT\";\n  ArrowDirection[ArrowDirection[\"RIGHT\"] = 1] = \"RIGHT\";\n  return ArrowDirection;\n}(ArrowDirection || {});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}